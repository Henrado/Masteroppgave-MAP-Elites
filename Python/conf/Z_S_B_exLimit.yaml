---


# The random seed
#seed: 1234567890

# The name of the main algorithm (see below the description of 'algoTotal')
main_algorithm_name: algoTotal

# The uotput directory 
log_base_path: t2 # Blir overskrevet i slurm 

# The list of all container.
containers:
    cont0:
        type: Grid                               # The type of the container (e.g. Grid, CVTGrid, Container, NoveltyArchive, ...)
        name: cont0                              # The name of the container. Optional. Default to the parent key (here also 'cont0')
        shape: [20, 20]                          # The number of bins for each feature
        max_items_per_bin: 1                     # The number of items in each bin of the grid
        fitness_domain: [[0., 1.]]               # The domain of each fitness objective (here we only have one objective)
        features_domain: [[-10., 10.], [-10., 10.]]    # The domain of each feature


# The list of all algorithms
algorithms:
    # Default parameter values for each algorithm
    optimisation_task: maximisation   # We perform maximisation of all fitness objectives
    ind_domain: [-1., 1.]              # The domain of each value of the genome (optional)
    container: cont0                  # The container to use to store individuals told to the optimisers
    dimension: 1                      # DENNE må være med men vil bli overskrevet av programmet basert på type individ og controller

    algoQD:
        type: RandomSearchMutPolyBounded
        budget: 10000       # The total number of allowed evaluations for this algorithm
        batch_size: 100     # The number of evaluations in each subsequent batch 
        #sel_pb: 0.9         # The probability of performing selection+variation instead of initialising a new genome
        #init_pb: 0.1        # The probability of initiating a new genome instead of performing selection
        #mut_pb: 0.4         # The probability of mutating each value of the genome of a selected individual
        #eta: 20.            # The ETA parameter of the polynomial mutation (as defined in the origin NSGA-II paper by Deb.). It corresponds to the crowding degree of the mutation. A high ETA will produce mutants close to its parent, a small ETA will produce offspring with more changes.

    algoTotal:
        type: Sq
        algorithms: ['algoQD'] # The list of algorithms to execute
        tell_container_when_switching: only_best
        #tell_container_when_switching: True               # Whether to tell the next algorithm in the list all results of the previous algorithm

logger:
    save_period: 20

ParallelismManager:
    parallelismType: none
    batch_mode: False

Unity:
    individ: Individual_zeroLocked
    #individ: Individual_twoLock
    #individ: Individual_globalLock
    controller: SineController
    #controller: SineControllerUfq
    #controller: TanhController
    #controller: TanhControllerWOff
    #controller: TanhControllerWOffFq
    fitnessfunction: basicFitness
    #fitnessfunction: circleFitness
    evaluation_steps: 1000
    editor_mode: False
    headless: True
    #worker_id: 1
    time_scale: 100

Qutee:
    #jointDriveSettings: [1,2,3] # Trenger 3 inputs i liste [MaxJointSpring, JointDampen, MaxJointForceLimit]
    legAngularLimits: [45,-20,60,-20,50] # Trenger 5: [led0 i y, upperlegMIN, upperlegMAX, forlegMIN, forlegMAX]
    #robotMassPart: [9,10,11,12] # Trenger 4: [center masse, leg masse, upperleg masse, forleg masse]
    #groundContactPenaltyPart: -1 # Et tall, gjerne negativt for å straffe å treffe center meg ground


