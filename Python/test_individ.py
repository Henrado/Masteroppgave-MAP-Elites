from Unity.Unity_evaluator import UnityEvaluator
from EA.Individual import Individual_30, Individual_48
from EA.Sine_controller import SineController
import numpy as np
import argparse
from qdpy import algorithms, containers, plots
from qdpy.base import ParallelismManager
import math
import os
import json
import sys


# open JSON file
#with open(sys.argv[1], 'r', encoding='utf-8') as infile:
#    json_str = infile.read()

# convert JSON string to JSON object
#json_obj = json.loads(json_str)

#obj2 = json.loads(json_obj["container"])
#print(type(json_obj["container"]))
#print(json_obj["container"][0])

ind = np.array([0.48756968292376146, 0.39640734381815923, -0.03207644652212038, 0.24265365709548137, 0.8550142124786901, 0.5464029375062585, 0.17257735601180801, 0.4243453187142534, -0.9495004848036142, 0.39475831878655354, 0.5339192080206105, -0.9803351856771438, 0.8910855701720741, -0.6673270491389225, 0.3940192187672651, -0.8236021385572971, 0.7618005228562197, -0.8589349564999043, 0.7008658470007034, -0.28640736809135814, 0.05705316890244716, 0.5346425072768815, -0.9098338578161032, 0.45201868103425147, 0.48132346152856265, 0.9680821212030855, -0.12747508143218855, 0.2558562617257518, -0.4774864290968419, -0.06031849360473296, 0.6841350207925647, 0.19174609859282388, 0.8653654622102673, 0.6294845314523694, -0.5087691818872964, 0.6171186014841978, -0.27712177196433907, -0.6852940349304639, -0.12223714312944312, 0.4579504682180895, 0.9806151740035143, -0.0689757719817834, 0.35677571816046094, 0.8659790041606694, -0.3847738298365213, -0.5923653707936187, -0.041694685856909386, 0.6378015553635297])
#Mye bevegelse litt fremover mye bevegelse
ind = np.array([-0.8769386976498525, -0.9227767698401925, 0.26430961258176344, 0.5819408049170329, -0.6691918930034289, 0.4212663267995733, 0.8680738679682247, -0.4055185413317779, -0.878911638456034, 0.04853023223837094, -0.1765556095906493, 0.6221659567320152, 0.1361706577652393, -0.5626004685427024, 0.5801715555715261, -0.34688489978315307, 0.46318955001481266, 0.05257955353081312, 0.5907703890421485, -0.4593313294875818, -0.8497230233978381, -0.0711369645044404, -0.3010947975179923, 0.9359144059589617, 0.8098819386033824, 0.22091362622527355, -0.9464510371707775, -0.7656647397632306, -0.4527698907263884, 0.8733521570381526, 0.872851553254705, 0.7404049270146067, 0.1348646330651342, 0.9941300968989748, -0.9241600421223257, -0.8122972599000271, 0.5973674668439912, 0.8201436166164482, -0.5960100617415178, 0.5199623941372828, -0.6936435743853071, 0.6445700889266781, -0.6259165031007428, -0.18953986526022382, -0.7801502240854594, 0.32472722991745395, 0.12356233037568054, 0.5060100984610383])

ind = np.array([0.7657368816499277, -0.543151664535305, -0.01326708765179263, 0.30114942013705437, 
                -0.2701442820407709, 0.2661432140135167, 0.6000726831548633, -0.17693306828975341, 
                -0.44861745594503644, -0.6891773165675106, -0.8859335567356308, -0.7745727317128552, 
                0.08291356471653377, 0.9086388554964189, -0.6274112171185013, -0.6174293110128941, 
                -0.16709865598313933, -0.09926724865102887, 0.6723262032579627, 0.6517527013311888, 
                0.30599966440454307, 0.2573632027213475, 0.5764578301991021, -0.9982244508445057, 
                -0.8918663385129544, 0.11943106099395617, 0.17905190972984464, -0.37440930923645843, 
                -0.7707159687124967, 0.22047772401013388, 0.46768303825301083, 0.7780942569693874, 
                0.9642605738725769, -0.5673778207351037, 0.0930384305292491, -0.32360001282786954, 
                -0.8232850513338785, 0.5077313257159775, 0.54642400549921, 0.7640206963402152, 
                -0.7740081432259001, 0.6750461028160701, 0.19129384595140553, 0.8149543980243688, 
                -0.3308840725919371, 0.3419686174269456, 0.1944557353249463, 0.2220189116273379])

ind = np.array([0.7657368816499277, -0.543151664535305, -0.01326708765179263, 0.30114942013705437, 
                -0.2701442820407709, 0.2661432140135167, 0.6000726831548633, -0.17693306828975341, 
                -0.44861745594503644, -0.6891773165675106, -0.8859335567356308, -0.7745727317128552, 
                0.78291356471653377, 0.9086388554964189, -0.6274112171185013, -0.6174293110128941, 
                -0.46709865598313933, -0.39926724865102887, 0.6723262032579627, 0.6517527013311888, 
                0.60599966440454307, 0.2573632027213475, 0.5764578301991021, -0.9982244508445057, 
                -0.8918663385129544, 0.11943106099395617, 0.17905190972984464, -0.37440930923645843, 
                -0.7707159687124967, 0.22047772401013388, 0.46768303825301083, 0.7780942569693874, 
                0.9642605738725769, -0.5673778207351037, 0.0930384305292491, -0.32360001282786954, 
                -0.8232850513338785, 0.5077313257159775, 0.54642400549921, 0.7640206963402152, 
                -0.7740081432259001, 0.6750461028160701, 0.19129384595140553, 0.8149543980243688, 
                -0.3308840725919371, 0.3419686174269456, 0.1944557353249463, 0.2220189116273379])

individ = Individual_48 # Type individ, finnes bare en til n√•
controller = SineController # Type kontroller til individ, finnes bare 

count_leg = 4
actuators_leg = 3
params_actuators = 4
dimension_count = count_leg*actuators_leg*params_actuators
dimension_shape = (count_leg, actuators_leg, params_actuators)

try:
    # Lager evaluator:
    env = UnityEvaluator(500, editor_mode=False, headless=False, worker_id=0, individ=individ, controller=SineController)
        
    env.evaluate(ind, False)
    pass

finally:
    env.close()
    pass